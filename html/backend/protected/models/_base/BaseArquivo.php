<?php

/**
 * This is the model base class for the table "arquivo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Arquivo".
 *
 * Columns in table "arquivo" available as properties of the model,
 * followed by relations of table "arquivo" available as properties of the model.
 *
 * @property integer $id_arquivo
 * @property string $ref_arquivo
 * @property string $nome_arquivo
 * @property string $caminho_arquivo
 * @property integer $versao
 * @property integer $programa_id_programa
 *
 * @property Programa $programaIdPrograma
 */
abstract class BaseArquivo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'arquivo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Arquivo|Arquivos', $n);
	}

	public static function representingColumn() {
		return 'ref_arquivo';
	}

	public function rules() {
		return array(
			array('programa_id_programa', 'required'),
			array('versao, programa_id_programa', 'numerical', 'integerOnly'=>true),
			array('ref_arquivo', 'length', 'max'=>45),
			array('nome_arquivo', 'length', 'max'=>100),
			array('caminho_arquivo', 'length', 'max'=>512),
			array('ref_arquivo, nome_arquivo, caminho_arquivo, versao', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id_arquivo, ref_arquivo, nome_arquivo, caminho_arquivo, versao, programa_id_programa', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'programaIdPrograma' => array(self::BELONGS_TO, 'Programa', 'programa_id_programa'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_arquivo' => Yii::t('app', 'Id Arquivo'),
			'ref_arquivo' => Yii::t('app', 'Ref Arquivo'),
			'nome_arquivo' => Yii::t('app', 'Nome Arquivo'),
			'caminho_arquivo' => Yii::t('app', 'Caminho Arquivo'),
			'versao' => Yii::t('app', 'Versao'),
			'programa_id_programa' => null,
			'programaIdPrograma' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_arquivo', $this->id_arquivo);
		$criteria->compare('ref_arquivo', $this->ref_arquivo, true);
		$criteria->compare('nome_arquivo', $this->nome_arquivo, true);
		$criteria->compare('caminho_arquivo', $this->caminho_arquivo, true);
		$criteria->compare('versao', $this->versao);
		$criteria->compare('programa_id_programa', $this->programa_id_programa);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}